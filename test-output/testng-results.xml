<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-25T22:17:42 MST" name="Default suite" finished-at="2023-10-25T22:17:42 MST" duration-ms="197">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestNGRunner@359f7cdf]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-10-25T22:17:42 MST" name="Default test" finished-at="2023-10-25T22:17:42 MST" duration-ms="197">
      <class name="runner.TestNGRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.TestNGRunner@359f7cdf]" started-at="2023-10-25T22:17:42 MST" name="setUpClass" finished-at="2023-10-25T22:17:42 MST" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2df6226d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestNGRunner@359f7cdf]" started-at="2023-10-25T22:17:42 MST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-10-25T22:17:42 MST" duration-ms="57" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["HomePage functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing the DemoBlaze functionality"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.get(String)" because "genericLibrary.WebDriverCommonLib.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.get(String)" because "genericLibrary.WebDriverCommonLib.driver" is null
at genericLibrary.WebDriverCommonLib.openUrl(WebDriverCommonLib.java:20)
at PageObjectRepoLib.DemoBlazeHome.homePage(DemoBlazeHome.java:57)
at stepDefinitions.Step_Definitions.launch_url(Step_Definitions.java:34)
at âœ½.launch Url(file:///Users/shankari/eclipse-workspace/FinalProject/src/test/java/feature/demoBlaze.feature:9)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestNGRunner@359f7cdf]" started-at="2023-10-25T22:17:42 MST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-10-25T22:17:42 MST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing the DemoBlaze functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.TestNGRunner@359f7cdf]" started-at="2023-10-25T22:17:42 MST" name="tearDownClass" finished-at="2023-10-25T22:17:42 MST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestNGRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
